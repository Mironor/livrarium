# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="toc5[B/NOFbgto/@x76C6VnW/h67gS@i8If/8JcMaZBH5QD]4v/F9?Z4G2:@jFfO"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver=org.postgresql.Driver
db.default.url="jdbc:postgresql://localhost/livrarium"
db.default.user="alex"
db.default.password="domain"

slick.default="daos.*"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Application specific
folders.uploadPath = "/upload"
folders.generatedImagePath = "/public/img/upload"

books.thumbnailWidth = 160
books.thumbnailHeight = 220
books.smallThumbnailWidth = 30
books.smallThumbnailHeight = 40
books.uploadInputName = "books"

include "errors.conf"
include "silhouette.conf"
